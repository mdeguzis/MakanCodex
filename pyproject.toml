[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "makan_codex"
version = "0.1.8"
description = ""
authors = ["Michael DeGuzis <mdeguzis@gmail.com>"]
readme = "README.md"
packages = [
    { include = "makan_codex", from = "src", format = ["sdist", "wheel"] }
]


[tool.poetry.dependencies]
python = ">=3.8.1"
bs4 = "^0.0.2"
isodate = "^0.7.2"
certifi = "^2024.12.14"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pytest-cov = "^4.1.0"
mypy = "^1.8.0"
requests = "^2.32.3"
monkeytype = "^23.3.0"

[tool.poetry.scripts]
makan-codex = "makan_codex.cli:main"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
addopts = "--cov=src/makan_codex --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/makan_codex"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
